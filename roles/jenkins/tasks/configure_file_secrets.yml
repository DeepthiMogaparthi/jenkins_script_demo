- name: Check if secret file "{{ item.cred_desc }}" already exists
  jenkins_script:
    script: "{{ lookup('file', 'scripts/configure_cred.groovy') }}"
    user: "{{ jenkins_admin_user }}"
    password: "{{ jenkins_admin_pass }}"
    args:
      cred_desc: "{{ item.cred_desc }}"
      cred_project: "{{ item.cred_project|default('') }}"
      cred_type: 'file'
      cred_id: "{{ item.cred_id|default('') }}"
      cred_state: "{{ item.cred_state|default('present')}}"
      cred_filepath: ''
      cred_filename: ''
      cred_user: ''
      cred_pass: ''
      cred_text: ''
  register: secret_file_status

- name: Create directory for secrets
  file:
    path: "/var/lib/jenkins/jenkins_secret_files"
    state: directory
    mode: 0700
    owner: jenkins
  when: secret_file_status.output.find("file cred missing") != -1

- name: Copy secret file into place
  copy:
    src: "{{ item.cred_filename_src | default(item.cred_filename) }}"
    dest: "/var/lib/jenkins/jenkins_secret_files/{{ item.cred_filename }}"
  when: secret_file_status.output.find("file cred missing") != -1

- name: Add secret file if missing
  jenkins_script:
    script: "{{ lookup('file', 'scripts/configure_cred.groovy') }}"
    user: "{{ jenkins_admin_user }}"
    password: "{{ jenkins_admin_pass }}"
    args:
      cred_type: 'file'
      cred_id: "{{ item.cred_id|default('') }}"
      cred_desc: "{{ item.cred_desc }}"
      cred_project: "{{ item.cred_project|default('') }}"
      cred_filepath: "/var/lib/jenkins/jenkins_secret_files"
      cred_filename: "{{ item.cred_filename }}"
      cred_state: "{{ item.cred_state|default('present')}}"
      cred_user: ''
      cred_pass: ''
      cred_text: ''
  changed_when: true
  when: secret_file_status.output.find("file cred missing") != -1

- name: Remove file after import
  file:
    state: absent
    path: "/var/lib/jenkins/jenkins_secret_files/{{ item.cred_filename }}"
  when: item.cred_filename != ''
